services:
	moduleManager:
		setup:
			- addModule(Crm\FamilyModule\FamilyModule())

	filterLoader:
		setup:
			- register('maskEmail', [Crm\FamilyModule\Helpers\MaskEmailHelper(), process])

	# API
	- Crm\FamilyModule\Api\ActivateFamilyRequestApiHandler
	- Crm\FamilyModule\Api\ListFamilyRequestsApiHandler

	# components
	- Crm\FamilyModule\Components\FamilyRequestsDashboardWidget\FamilyRequestsDashboardWidget
	- Crm\FamilyModule\Components\FamilyRequestsListWidget\FamilyRequestsListWidget
	- Crm\FamilyModule\Components\UsersAbusiveAdditionalWidget\UsersAbusiveAdditionalWidget
	- Crm\FamilyModule\Components\MasterFamilySubscriptionInfoWidget\MasterFamilySubscriptionInfoWidget
	- Crm\FamilyModule\Components\SlaveFamilySubscriptionInfoWidget\SlaveFamilySubscriptionInfoWidget

	# events
	familyNewSubscriptionHandler: Crm\FamilyModule\Events\NewSubscriptionHandler

	# models
	- Crm\FamilyModule\Models\FamilyRequests
	- Crm\FamilyModule\Models\DonateSubscription

	# repositories
	- Crm\FamilyModule\Repositories\FamilySubscriptionsRepository
	- Crm\FamilyModule\Repositories\FamilyRequestsRepository
	- Crm\FamilyModule\Repositories\FamilySubscriptionTypesRepository

	# scenarios
	- Crm\FamilyModule\Models\Scenarios\IsFamilyMasterCriteria
	- Crm\FamilyModule\Models\Scenarios\IsFamilySlaveCriteria

	# seeders
	- Crm\FamilyModule\Seeders\FamilySeeder
	- Crm\FamilyModule\Seeders\SubscriptionExtensionMethodsSeeder

	- Crm\FamilyModule\Models\Extension\ExtendFamilyExtension
	extensionMethodFactory:
		setup:
			# register subscription extension method for family subscription types
			- registerExtension(Crm\FamilyModule\Models\Extension\ExtendFamilyExtension::METHOD_CODE, Crm\FamilyModule\Models\Extension\ExtendFamilyExtension)
